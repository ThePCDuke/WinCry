<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:models="clr-namespace:WinCry.Models">

    <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="TreeViewToggleButtonTemplate">
        <Grid>
            <Border Background="Transparent"
                    Height="15"
                    Width="15">

                <Viewbox Name="ArrowViewbox"
                         Height="10"
                         Width="10"
                         RenderTransformOrigin=".5,.5">
                    <Viewbox.RenderTransform>
                        <RotateTransform Angle="-90"/>
                    </Viewbox.RenderTransform>

                    <Path x:Name="Arrow"
                          RenderTransformOrigin=".5,.5"
                          Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                          HorizontalAlignment="Center" 
                          VerticalAlignment="Center"
                          Opacity=".6"
                          Fill="Gray">

                    </Path>
                </Viewbox>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>

            <EventTrigger RoutedEvent="Border.MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation FillBehavior="HoldEnd" To="1" Duration="0:0:0.2" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Opacity" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <EventTrigger RoutedEvent="Border.MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation FillBehavior="HoldEnd" To=".6" Duration="0:0:0.2" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Opacity" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Path.Fill" TargetName="Arrow" Value="White"/>
                <Setter Property="Viewbox.RenderTransform" TargetName="ArrowViewbox">
                    <Setter.Value>
                        <RotateTransform Angle="0"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="IsExpanded" Value="False" />
        <Setter Property="KeyboardNavigation.AcceptsReturn" Value="True" />
        <Setter Property="models:VirtualToggleButton.IsVirtualToggleButton" Value="True" />
        <Setter Property="models:VirtualToggleButton.IsChecked" Value="{Binding IsChecked}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ItemsHost">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Collapsed" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ToggleButton x:Name="Expander"
                                      ClickMode="Press"
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                      Template="{StaticResource TreeViewToggleButtonTemplate}"/>
                        
                        <Border x:Name="Bd"
                                Grid.Column="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            
                            <ContentPresenter x:Name="PART_Header"
                                              ContentSource="Header"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Grid.ColumnSpan="2"
                                        Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Width" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false" />
                                <Condition Property="Height" Value="Auto" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate TargetType="{x:Type ToggleButton}" x:Key="ExpanderToggleButtonTemplate">
        <Grid>
            <Border Background="#FF1B1B1B"
                    Height="20"
                    Width="20"
                    CornerRadius="4">

                <Viewbox Name="ArrowViewbox"
                         Height="10"
                         Width="10"
                         RenderTransformOrigin=".5,.5">
                    <Viewbox.RenderTransform>
                        <RotateTransform Angle="-90"/>
                    </Viewbox.RenderTransform>

                    <Path x:Name="Arrow"
                          RenderTransformOrigin=".5,.5"
                          Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                          HorizontalAlignment="Center" 
                          VerticalAlignment="Center"
                          Opacity=".6"
                          Fill="Gray">

                    </Path>
                </Viewbox>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>

            <EventTrigger RoutedEvent="Border.MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation FillBehavior="HoldEnd" To="1" Duration="0:0:0.2" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Opacity" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <EventTrigger RoutedEvent="Border.MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation FillBehavior="HoldEnd" To=".6" Duration="0:0:0.2" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="Opacity" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Path.Fill" TargetName="Arrow" Value="White"/>
                <Setter Property="Viewbox.RenderTransform" TargetName="ArrowViewbox">
                    <Setter.Value>
                        <RotateTransform Angle="0"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate TargetType="{x:Type Expander}" x:Key="ExpanderTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="19" Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="ExpansionStates">
                    <VisualState x:Name="Expanded">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ItemsHost">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Collapsed" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            
            <ToggleButton x:Name="Expander"
                          VerticalAlignment="Top"
                          Margin="0,2,0,0"
                          ClickMode="Press"
                          IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                          Template="{StaticResource ExpanderToggleButtonTemplate}"/>

            <Border x:Name="Bd"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    Margin="5,0,5,0"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}">

                <ContentPresenter x:Name="PART_Header"
                                  ContentSource="Header"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
            </Border>
            <ContentPresenter x:Name="ItemsHost"
                              Grid.Row="1"
                              Grid.ColumnSpan="3"
                              Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="HasHeader" Value="false" />
                    <Condition Property="Width" Value="Auto" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Header" Property="MinWidth" Value="75" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="HasHeader" Value="false" />
                    <Condition Property="Height" Value="Auto" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Header" Property="MinHeight" Value="19" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>